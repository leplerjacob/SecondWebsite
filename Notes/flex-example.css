* {
  margin: 0;
  padding: 0;
}

.container {
  width: 650px;
  height: 600px;
  background: #333;
  padding: 20px;
}

li:nth-child(6) {
  height: 80px;
  background: blue;
}

li:nth-child(2) {
  height: 70px;
  background: yellow;
}
ul {
    height: 100%;
    width: 100%;
  display: flex;
  flex-wrap: wrap;
  /* Align-content sets the space between each row of items */
  align-content: space-between;
  /* Align-items sets the vertical placement of items within the row */
  align-items: center;
  /* Justify-content sets the spacing between each item and their position within the container*/
  justify-content: space-between;
}

li {
  /* Flex-basis sets the flex items width first within the ul (same width as container - 500px) to a specified size before any addition space that is available is assigned to the element. In a flex row, flex-basis changes the width of elements. In a flex-column, flex-basis changes the height of elements. 
        - 30% will set items to width 150px = (500 * .30)
        - 30px will set items to 30px plus any addition space before the item has to wrap
        - How flex-basis determines how much additional space to give each element is still unclear to me.
        */
  /* flex-basis: 30%; */
  height: auto;
  width: auto;
  /* margin: 0 auto; */
  text-align: center;
  padding: 20px 0;
  list-style: none;
  border: #ffffff 2px solid;
  background: red;

  display: flex;
}

h1 {
    margin: auto;
    padding: auto;
}
